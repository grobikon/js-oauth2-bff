# ссылка на сертификаты authserver для проверки целостности access token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://localhost:8443/realms/grobikon-realm/protocol/openid-connect/certs
# настройки для Spring, чтобы он использовал SSL
# включаем использование SSL для проекта
server.ssl.enabled=true
# формат файла, где хранится открытый и закрытый ключ
server.ssl.key-store-type=PKCS12
# путь относительно папки resources
server.ssl.key-store=classpath:ssl/grobikon_ssl.p12
# пароль на файл (обязательно нужно устанавливать)
server.ssl.key-store-password=rootroot
# провайдер (движок), который реализует CryptoAPI (включен в состав JDK)
server.ssl.key-store-provider=SunJSSE


#logging.level.org.springframework=trace

server.port=8902

client.url=https://localhost:8080
resourceserver.url=https://localhost:8901
keycloak.url=https://localhost:8443/realms/grobikon-realm/protocol/openid-connect

logging.level.org.springframework.web.client=trace

# более короткое отображение логов
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

# берется из KeyCloak
keycloak.secret=94sQ47NcNpTe8ViNm0yJu7kB7JQgOt0k
keycloak.clientid=grobikon-client

# обратим внимание, что теперь это не PKCE
keycloak.granttype.code=authorization_code
keycloak.granttype.refresh=refresh_token

# для браузера - чтобы выбирать, какие куки в какой хост отправлять
cookie.domain=localhost